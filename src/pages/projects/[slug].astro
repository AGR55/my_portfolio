---
import { getCollection, getEntryBySlug } from "astro:content";
import Layout from "../../layouts/Layout.astro";

// Generate paths for all projects
export async function getStaticPaths() {
  const projectEntries = await getCollection("projects");
  return projectEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the project data from the collection
const { entry } = Astro.props;
const { Content } = await entry.render();

// Get related projects (same tag, excluding current project)
const allProjects = await getCollection("projects");
const relatedProjects = allProjects
  .filter(project => 
    project.slug !== entry.slug && 
    project.data.tags.some(tag => entry.data.tags.includes(tag))
  )
  .sort(() => Math.random() - 0.5) // Shuffle array
  .slice(0, 3); // Get up to 3 related projects
---

<Layout
  title={`${entry.data.title} - Your Name`}
  description={entry.data.description}
  ogImage={entry.data.image}
>
  <article class="pt-32 pb-16 md:pt-40 md:pb-24">
    <div class="container-custom max-w-5xl">
      <div class="mb-12">
        <div class="flex gap-2 flex-wrap mb-4">
          {entry.data.tags.map((tag) => (
            <span class="px-3 py-1 text-sm font-medium bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 rounded-full">
              {tag}
            </span>
          ))}
        </div>
        
        <h1 class="heading-xl mb-6">{entry.data.title}</h1>
        
        <p class="body-lg text-gray-600 dark:text-gray-400 mb-8 max-w-3xl">
          {entry.data.description}
        </p>
        
        <div class="flex flex-wrap gap-4 mb-12">
          {entry.data.github && (
            <a 
              href={entry.data.github} 
              target="_blank" 
              rel="noopener noreferrer" 
              class="btn-primary"
            >
              <svg class="h-5 w-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z" />
              </svg>
              View on GitHub
            </a>
          )}
          
          {entry.data.live && (
            <a 
              href={entry.data.live} 
              target="_blank" 
              rel="noopener noreferrer" 
              class="btn-outline"
            >
              <svg class="h-5 w-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
              </svg>
              Live Demo
            </a>
          )}
        </div>
        
        {entry.data.image && (
          <div class="rounded-lg overflow-hidden mb-12 shadow-md">
            <img 
              src={entry.data.image} 
              alt={entry.data.title}
              class="w-full h-auto object-cover" 
            />
          </div>
        )}
      </div>
      
      <div class="prose prose-lg dark:prose-invert max-w-none">
        <Content />
      </div>
      
      <div class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-800">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          {entry.data.technologies && (
            <div>
              <h3 class="heading-sm mb-3">Technologies Used</h3>
              <ul class="flex flex-wrap gap-2">
                {entry.data.technologies.map((tech) => (
                  <li class="px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 rounded-full text-sm">
                    {tech}
                  </li>
                ))}
              </ul>
            </div>
          )}
          
          {entry.data.client && (
            <div>
              <h3 class="heading-sm mb-3">Client</h3>
              <p class="text-gray-700 dark:text-gray-300">{entry.data.client}</p>
            </div>
          )}
          
          {entry.data.date && (
            <div>
              <h3 class="heading-sm mb-3">Date</h3>
              <p class="text-gray-700 dark:text-gray-300">
                {new Date(entry.data.date).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long'
                })}
              </p>
            </div>
          )}
        </div>
      </div>
    </div>
    
    {relatedProjects.length > 0 && (
      <div class="container-custom max-w-7xl mt-24">
        <h2 class="heading-md mb-8">Related Projects</h2>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {relatedProjects.map((project) => (
            <div>
              <a href={`/projects/${project.slug}`} class="block">
                <div class="card group hover:shadow-md transition-shadow duration-300 h-full flex flex-col">
                  {project.data.image && (
                    <div class="relative overflow-hidden rounded-t-lg aspect-video">
                      <img 
                        src={project.data.image} 
                        alt={project.data.title} 
                        class="w-full h-full object-cover object-center transition-transform duration-500 group-hover:scale-105"
                        loading="lazy"
                      />
                    </div>
                  )}
                  
                  <div class="p-6 flex-grow flex flex-col">
                    <div class="flex gap-2 flex-wrap mb-3">
                      {project.data.tags.slice(0, 3).map((tag) => (
                        <span class="px-2 py-1 text-xs font-medium bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 rounded-full">
                          {tag}
                        </span>
                      ))}
                    </div>
                    
                    <h3 class="heading-sm mb-2 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
                      {project.data.title}
                    </h3>
                    
                    <p class="text-gray-600 dark:text-gray-400 line-clamp-2">
                      {project.data.description}
                    </p>
                  </div>
                </div>
              </a>
            </div>
          ))}
        </div>
      </div>
    )}
  </article>
</Layout>